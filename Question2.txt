

Question 2:


trigger accountTrigger on Account (before delete, before insert, before update) {
	List<Opportunity> opptysClosedLost = [select id, name, closedate, stagename from Opportunity
						where accountId IN :Trigger.newMap.keySet() and StageName='Closed - Lost'];
											
	List<Opportunity> opptysClosedWon = [select id, name, closedate, stagename from Opportunity
						where accountId IN :Trigger.newMap.keySet() and StageName='Closed - Won'];
										
	for(Account a : Trigger.new){
			for(Opportunity o: opptysClosedLost){
					if(o.accountid == a.id)
							System.debug('Do more logic here...');
			}
			for(Opportunity o: opptysClosedWon){
					if(o.accountid == a.id)
						System.debug('Do more logic here...');
			}
	}
}

Solution :

trigger accountTrigger on Account (before delete, before insert, before update) {
	 List<String> stageNameList = new List<String>{'Closed - Lost','Closed - Won'};
	 List<Opportunity> opptysClosedLost = [select id, name, closedate, stagename from Opportunity
					     where accountId IN :Trigger.newMap.keySet() and StageName IN  :stageNameList ];
				     
		for(Account a : Trigger.new){
			for(Opportunity o: opptysClosedLost){
					if(o.accountid == a.id && o.StageName == 'Closed - Won')
						System.debug('Do more logic here...');
					else if(o.accountid == a.id && o.StageName == 'Closed - Lost')
						System.debug('Do more logic here...');
			}
		}
}


1. Creating a query for fetch account with Their Opportunities that are closed won/closed lost.
2. Instead of making two opportunity list making only one and iterating list with checking  stageName of opportunity.
3. finally the opportunities can be further processed by if conditions to identify closed won/closed lost.
